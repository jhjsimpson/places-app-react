name: Production Workflow

on:
  push:
    branches:
      - main

permissions:
  contents: read

concurrency: production

jobs:

  lint-test:
    name: Lint, Test & Code Coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set Up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Lint
        run: npx eslint --ext .js src/ --fix-dry-run

      - name: Run Tests
        run: npm test -- --coverage

  security-checks:
    # Runs security checks / OWASP
    name: Run security checks 
    needs: lint-test
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=critical

  bump_version:
    name: Bump version
    runs-on: ubuntu-latest
    needs: [lint-test, security-checks]
    permissions: write-all
    outputs:
      new_tag: ${{ steps.taggerBumper.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: ‘0’

      - name: Bump version
        id: taggerBumper
        # Tracking version changes / DEFAULT_BUMP can bet set
        uses: anothrNick/github-tag-action@1.36.0 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          RELEASE_BRANCHES: ‘main’
          DEFAULT_BUMP: patch
          PRERELEASE_SUFFIX: ''

  push_to_docker:
    name: Push image to docker
    needs: [bump_version] # get_commit_sha removed
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Build and push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          # Image name in docker
          image: jhjsdeveloper/places-app
          # Removed ${{ needs.get_commit_sha.outputs.sha_output }}-SNAPSHOT
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  deploy_app:
    name: Deploy to Production
    needs: [push_to_docker, bump_version]
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm build --if-present
      - name: Inject version
        run: | 
          echo "window['appConfig'] = {\"version\": \"${{ needs.bump_version.outputs.new_tag }}\"}" > build/app-config.js
      - name: Deploy App
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          heroku_app_name: 'places-app-bootcamp'
    
